unit UDataMod;

interface

uses
  SysUtils, Classes, DB, DBClient, MConnect, SConnect, Windows, IniFiles, Forms,
  Variants, Dialogs, DateUtils, Graphics, ImgList, Controls, DBCtrls,
  Data.DBXDataSnap, IndyPeerImpl, Data.DBXCommon, Datasnap.DSConnect,
  Data.SqlExpr, Data.FMTBcd, Data.DBXFirebird, Datasnap.Provider;

type
  TDm = class(TDataModule)
    CDSProduto: TClientDataSet;
    CDSProdutoTMax: TAggregateField;
    OpenDialog: TOpenDialog;
    ImageList1: TImageList;
    ImageList2: TImageList;
    SQLConnection: TSQLConnection;
    QProduto: TSQLDataSet;
    DSPProduto: TDataSetProvider;
    QProdutoID: TIntegerField;
    QProdutoDESCRICAO: TStringField;
    QProdutoNOME: TStringField;
    QProdutoBARRAS: TStringField;
    QProdutoPRECO: TFMTBCDField;
    CDSProdutoID: TIntegerField;
    CDSProdutoDESCRICAO: TStringField;
    CDSProdutoNOME: TStringField;
    CDSProdutoBARRAS: TStringField;
    CDSProdutoPRECO: TFMTBCDField;
    QExec: TSQLQuery;
    CDSCliente: TClientDataSet;
    IntegerField1: TIntegerField;
    StringField1: TStringField;
    StringField2: TStringField;
    StringField3: TStringField;
    FMTBCDField1: TFMTBCDField;
    AggregateField1: TAggregateField;
    QCliente: TSQLDataSet;
    IntegerField2: TIntegerField;
    StringField4: TStringField;
    StringField5: TStringField;
    StringField6: TStringField;
    FMTBCDField2: TFMTBCDField;
    DSPCliente: TDataSetProvider;
    procedure CDSProdutoAfterDelete(DataSet: TDataSet);
    procedure CDSProdutoAfterPost(DataSet: TDataSet);
    procedure CDSProdutoNewRecord(DataSet: TDataSet);
    procedure DataModuleCreate(Sender: TObject);
    procedure CDSProdutoReconcileError(DataSet: TCustomClientDataSet;
      E: EReconcileError; UpdateKind: TUpdateKind;
      var Action: TReconcileAction);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Dm: TDm;

implementation

{$R *.dfm}

uses UFuncoes;

procedure TDm.CDSProdutoAfterDelete(DataSet: TDataSet);
begin
  CDSProduto.ApplyUpdates(0);
end;

procedure TDm.CDSProdutoAfterPost(DataSet: TDataSet);
begin
  CDSProduto.ApplyUpdates(0);
end;

procedure TDm.CDSProdutoNewRecord(DataSet: TDataSet);
begin
  Dm.CDSProdutoID.AsInteger := StrToIntDef(VarToStr(DM.CDSProdutoTMax.Value),0)+1;
end;

procedure TDm.CDSProdutoReconcileError(DataSet: TCustomClientDataSet;
  E: EReconcileError; UpdateKind: TUpdateKind; var Action: TReconcileAction);
begin
  showmessage('Erro:' + E.Message);
end;

procedure TDm.DataModuleCreate(Sender: TObject);
const ARQ: String = 'Digi.ini';
var v: byte;
begin
  if FileExists(ExtractFilePath(Application.ExeName) + ARQ) then
    SQLConnection.params.LoadFromFile(ExtractFilePath(Application.ExeName) + ARQ)
  else
    SQLConnection.params.SaveToFile(ExtractFilePath(Application.ExeName) + ARQ);
  SQLConnection.Connected := True;

  try
    v := ExecSql('SELECT ID FROM VERSAO');
  except
    v := 0;
  end;
  if v = 0 then
  begin
    ExecSQL('CREATE TABLE VERSAO (ID INTEGER NOT NULL);', True);
    ExecSQL('ALTER TABLE VERSAO ADD CONSTRAINT PK_VERSAO PRIMARY KEY (ID);', True);
    ExecSQL('INSERT INTO VERSAO (ID) VALUES (1);', True);
  end;
  if v < 1 then
  begin
//    ExecSQL('ALTER TABLE ... ;', True);
  end;
  ExecSQL('UPDATE VERSAO SET ID = 1;', True);
end;

end.

