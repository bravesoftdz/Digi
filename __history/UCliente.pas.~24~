unit UCliente;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, UPadrao, Data.DB, Vcl.Mask, Vcl.DBCtrls,
  Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.Grids, Vcl.DBGrids, DBClient, Generics.Collections;

type
  TCliente = class
  private
    FTelefone: String;
    FNome: String;
    FCidade: String;
    FCodigo: String;
  public
    property Telefone: String read FTelefone write FTelefone;
    property Nome: String read FNome write FNome;
    property Cidade: String read FCidade write FCidade;
    property Codigo: String read FCodigo write FCodigo;
  end;
  TFCliente = class(TFPadrao)
    DBEdit1: TDBEdit;
    Label1: TLabel;
    DBEdit2: TDBEdit;
    Label2: TLabel;
    DBEdit3: TDBEdit;
    Label3: TLabel;
    procedure Importar; override;
    procedure Imprimir; override;
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FCliente: TFCliente;

implementation

{$R *.dfm}

uses UDataMod;

procedure TFCliente.Importar;
var
  Lista: TList<TCliente>;
  I : Integer;
  Cli: TCliente;
begin
  try
    Lista := TList<TCliente>.Create;
    for I := 0 to dm.XMLDoc.DocumentElement.ChildNodes.Count - 1 do
    begin
      with Cli.Create, dm.XMLDoc, dm.XMLDoc.DocumentElement.ChildNodes[I] do
      begin
        Telefone := ChildNodes['TELEFONE'].Text;
        Nome := ChildNodes['NOME'].Text;
        Cidade := ChildNodes['CIDADE'].Text;
        Codigo := ChildNodes['CODIGO'].Text;
      end;
      Lista.Add(Cli);
    end;
    for I := 0 to dm.XMLDoc.DocumentElement.ChildNodes.Count - 1 do
    begin
      with Lista.Items[i] do
      begin
        Codigo := IntToStr(StrToIntDef(Codigo, 0));
        dm.CDSProduto.IndexFieldNames := 'ID';
        if dm.CDSProduto.Locate('ID', Codigo, [loCaseInsensitive, loPartialKey]) then
          dm.CDSProduto.Edit
        else
        begin
          dm.CDSProduto.Append;
          dm.CDSProdutoID.AsInteger := StrToInt(Codigo);
        end;
        dm.CDSProdutoDESCRICAO.AsString := Descricao;
        dm.CDSProdutoNOME.AsString := Nome;
        dm.CDSProdutoBARRAS.AsString := Barra;
        dm.CDSProdutoPRECO.AsFloat := StrToFloatDef(SomenteNumero(Preco),0.00) / 100;
        dm.CDSProduto.Post;
      end;
    end;
  finally
    dm.XMLDoc.XML.Clear;
    Lista.Destroy;
  end;
end;

procedure TFCliente.Imprimir;
begin
  dm.frxCliente.ShowReport(True);
end;

end.
