unit UMenu;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ComCtrls, Vcl.ToolWin, Vcl.Menus, Vcl.Grids,
  Vcl.ExtCtrls, Vcl.ButtonGroup, Vcl.CategoryButtons;

type
  TFMenu = class(TForm)
    ToolBarMenu: TToolBar;
    btnCliente: TToolButton;
    btnProduto: TToolButton;
    btnVenda: TToolButton;
    ToolButton9: TToolButton;
    btnTroca: TToolButton;
    ToolButton2: TToolButton;
    btnBalcao: TToolButton;
    ToolButton4: TToolButton;
    MainMenu: TMainMenu;
    miSair: TMenuItem;
    Cadastros1: TMenuItem;
    miClientes: TMenuItem;
    miProdutos: TMenuItem;
    Movimentaes1: TMenuItem;
    miVendas: TMenuItem;
    miTrocas: TMenuItem;
    N1: TMenuItem;
    miBalcao: TMenuItem;
    btnImprimir: TToolButton;
    miImprimir: TMenuItem;
    GridPanel1: TGridPanel;
    CategoryPanelGroup1: TCategoryPanelGroup;
    CategoryPanel1: TCategoryPanel;
    CategoryPanel2: TCategoryPanel;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
    procedure btnSairClick(Sender: TObject);
    procedure btnProdutoClick(Sender: TObject);
    procedure btnClienteClick(Sender: TObject);
    procedure btnBalcaoClick(Sender: TObject);
    procedure btnVendaClick(Sender: TObject);
    procedure btnTrocaClick(Sender: TObject);
    procedure btnImprimirClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FMenu: TFMenu;

implementation

{$R *.dfm}

uses UDataMod, UFuncoes, UProduto, UCliente, UVendaTroca, UVenda, UTroca,
  UPadrao;

procedure TFMenu.btnBalcaoClick(Sender: TObject);
begin
  if FindWindow(nil, 'Vendas & Trocas') > 0 then
    FVendaTroca.BringToFront
  else
  begin
    FVendaTroca := TFVendaTroca.create(Self);
    FVendaTroca.Show;
  end;
end;

procedure TFMenu.btnClienteClick(Sender: TObject);
begin
  if FindWindow(nil, 'Clientes') > 0 then
    FCliente.BringToFront
  else
  begin
    FCliente := TFCliente.create(Self);
    FCliente.Show;
  end;
end;

procedure TFMenu.btnImprimirClick(Sender: TObject);
begin
  try
    TFPadrao(ActiveMDIChild).Imprimir;
  except
    on EAbstractError do
      showmessage('Impressão ainda não implementada!');
  end;
end;

procedure TFMenu.btnProdutoClick(Sender: TObject);
begin
  if FindWindow(nil, 'Produtos') > 0 then
    FProduto.BringToFront
  else
  begin
    FProduto := TFProduto.create(Self);
    FProduto.Show;
  end;
end;

procedure TFMenu.btnSairClick(Sender: TObject);
begin
  Application.Terminate;
end;

procedure TFMenu.btnTrocaClick(Sender: TObject);
begin
  if FindWindow(nil, 'Trocas') > 0 then
    FTroca.BringToFront
  else
  begin
    FTroca := TFTroca.create(Self);
    FTroca.Show;
  end;
end;

procedure TFMenu.btnVendaClick(Sender: TObject);
begin
  if FindWindow(nil, 'Vendas') > 0 then
    FVenda.BringToFront
  else
  begin
    FVenda := TFVenda.create(Self);
    FVenda.Show;
  end;
end;

procedure TFMenu.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Action := Cafree;
end;

procedure TFMenu.FormShow(Sender: TObject);
begin
  Self.Caption := CAPTIONINPUTBOX;
  dm.CDSVendaTroca.Open;
end;

end.
